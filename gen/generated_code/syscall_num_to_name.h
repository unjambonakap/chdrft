
  #include <map>
  #include <string>

  namespace opa {
  namespace code_gen {
  class SyscallMapper {
  public:
    SyscallMapper(){
      mp[1] = "exit";
mp[3] = "read";
mp[4] = "write";
mp[5] = "open";
mp[6] = "close";
mp[11] = "execve";
mp[12] = "chdir";
mp[19] = "lseek";
mp[20] = "getpid";
mp[21] = "mount";
mp[26] = "ptrace";
mp[36] = "sync";
mp[37] = "kill";
mp[41] = "dup";
mp[43] = "times";
mp[45] = "brk";
mp[51] = "acct";
mp[52] = "umount2";
mp[54] = "ioctl";
mp[57] = "setpgid";
mp[60] = "umask";
mp[61] = "chroot";
mp[64] = "getppid";
mp[66] = "setsid";
mp[67] = "sigaction";
mp[74] = "sethostname";
mp[75] = "setrlimit";
mp[77] = "getrusage";
mp[78] = "gettimeofday";
mp[79] = "settimeofday";
mp[87] = "swapon";
mp[88] = "reboot";
mp[91] = "munmap";
mp[92] = "truncate";
mp[93] = "ftruncate";
mp[94] = "fchmod";
mp[96] = "getpriority";
mp[97] = "setpriority";
mp[102] = "socketcall";
mp[103] = "syslog";
mp[104] = "setitimer";
mp[105] = "getitimer";
mp[114] = "wait4";
mp[115] = "swapoff";
mp[116] = "sysinfo";
mp[118] = "fsync";
mp[122] = "uname";
mp[125] = "mprotect";
mp[128] = "init_module";
mp[129] = "delete_module";
mp[132] = "getpgid";
mp[133] = "fchdir";
mp[136] = "personality";
mp[138] = "setfsuid";
mp[139] = "setfsgid";
mp[140] = "_llseek";
mp[143] = "flock";
mp[144] = "msync";
mp[145] = "readv";
mp[146] = "writev";
mp[147] = "getsid";
mp[148] = "fdatasync";
mp[150] = "mlock";
mp[151] = "munlock";
mp[152] = "mlockall";
mp[153] = "munlockall";
mp[154] = "sched_setparam";
mp[155] = "sched_getparam";
mp[156] = "sched_setscheduler";
mp[157] = "sched_getscheduler";
mp[158] = "sched_yield";
mp[159] = "sched_get_priority_max";
mp[160] = "sched_get_priority_min";
mp[161] = "sched_rr_get_interval";
mp[162] = "nanosleep";
mp[163] = "mremap";
mp[172] = "prctl";
mp[173] = "rt_sigreturn";
mp[174] = "rt_sigaction";
mp[175] = "rt_sigprocmask";
mp[176] = "rt_sigpending";
mp[177] = "rt_sigtimedwait";
mp[178] = "rt_sigqueueinfo";
mp[179] = "rt_sigsuspend";
mp[180] = "pread64";
mp[181] = "pwrite64";
mp[183] = "getcwd";
mp[184] = "capget";
mp[185] = "capset";
mp[186] = "sigaltstack";
mp[187] = "sendfile";
mp[191] = "ugetrlimit";
mp[192] = "mmap2";
mp[193] = "truncate64";
mp[194] = "ftruncate64";
mp[195] = "stat64";
mp[197] = "fstat64";
mp[199] = "getuid32";
mp[200] = "getgid32";
mp[201] = "geteuid32";
mp[202] = "getegid32";
mp[203] = "setreuid32";
mp[204] = "setregid32";
mp[205] = "getgroups32";
mp[206] = "setgroups32";
mp[207] = "fchown32";
mp[208] = "setresuid32";
mp[209] = "getresuid32";
mp[210] = "setresgid32";
mp[211] = "getresgid32";
mp[213] = "setuid32";
mp[214] = "setgid32";
mp[218] = "mincore";
mp[219] = "madvise";
mp[220] = "getdents64";
mp[221] = "fcntl64";
mp[225] = "readahead";
mp[226] = "setxattr";
mp[227] = "lsetxattr";
mp[228] = "fsetxattr";
mp[229] = "getxattr";
mp[230] = "lgetxattr";
mp[231] = "fgetxattr";
mp[232] = "listxattr";
mp[233] = "llistxattr";
mp[234] = "flistxattr";
mp[235] = "removexattr";
mp[236] = "lremovexattr";
mp[237] = "fremovexattr";
mp[239] = "sendfile64";
mp[241] = "sched_setaffinity";
mp[242] = "sched_getaffinity";
mp[243] = "set_thread_area";
mp[252] = "exit_group";
mp[255] = "epoll_ctl";
mp[258] = "set_tid_address";
mp[259] = "timer_create";
mp[260] = "timer_settime";
mp[261] = "timer_gettime";
mp[262] = "timer_getoverrun";
mp[263] = "timer_delete";
mp[264] = "clock_settime";
mp[265] = "clock_gettime";
mp[266] = "clock_getres";
mp[267] = "clock_nanosleep";
mp[268] = "statfs64";
mp[269] = "fstatfs64";
mp[270] = "tgkill";
mp[272] = "fadvise64_64";
mp[284] = "waitid";
mp[292] = "inotify_add_watch";
mp[293] = "inotify_rm_watch";
mp[295] = "openat";
mp[296] = "mkdirat";
mp[297] = "mknodat";
mp[298] = "fchownat";
mp[300] = "fstatat64";
mp[301] = "unlinkat";
mp[302] = "renameat";
mp[303] = "linkat";
mp[304] = "symlinkat";
mp[305] = "readlinkat";
mp[306] = "fchmodat";
mp[307] = "faccessat";
mp[308] = "pselect6";
mp[309] = "ppoll";
mp[310] = "unshare";
mp[313] = "splice";
mp[315] = "tee";
mp[316] = "vmsplice";
mp[318] = "getcpu";
mp[319] = "epoll_pwait";
mp[320] = "utimensat";
mp[322] = "timerfd_create";
mp[324] = "fallocate";
mp[325] = "timerfd_settime";
mp[326] = "timerfd_gettime";
mp[327] = "signalfd4";
mp[328] = "eventfd2";
mp[329] = "epoll_create1";
mp[330] = "dup3";
mp[331] = "pipe2";
mp[332] = "inotify_init1";
mp[340] = "prlimit64";
mp[346] = "setns";
    }
    std::map<int,std::string> mp;
  };
  SyscallMapper s_mapper;
  }
  }
  
